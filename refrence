// import React, { useState, useEffect } from 'react';

// function Stopwatch() {
//   const [seconds, setSeconds] = useState(0);
//   const [isRunning, setIsRunning] = useState(false);

//   useEffect(() => {
//     let intervalId;

//     if (isRunning) {
//       intervalId = setInterval(() => {
//         setSeconds(prevSeconds => prevSeconds + 1);
//       }, 1000);
//     }

//     return () => clearInterval(intervalId);
//   }, [isRunning]);

//   const handleStart = () => {
//     setIsRunning(true);
//   };

//   const handleStop = () => {
//     setIsRunning(false);
//   };

//   const handleReset = () => {
//     setIsRunning(false);
//     setSeconds(0);
//   };

//   const formatTime = (seconds) => {
//     const hours = Math.floor(seconds / 3600);
//     const minutes = Math.floor((seconds % 3600) / 60);
//     const secs = seconds % 60;

//     return `${padZero(hours)}:${padZero(minutes)}:${padZero(secs)}`;
//   };

//   const padZero = (number) => {
//     return (number < 10 ? '0' : '') + number;
//   };

//   return (
//     <div>
//       <h2>Stopwatch</h2>
//       <p>Elapsed Time: {formatTime(seconds)}</p>
//       <button onClick={handleStart} disabled={isRunning}>Start</button>
//       <button onClick={handleStop} disabled={!isRunning}>Stop</button>
//       <button onClick={handleReset}>Reset</button>
//     </div>
//   );
// }

// export default Stopwatch;




 //reference second
// // src/components/Stopwatch.js
// import React, { useState, useEffect } from 'react';

// const Stopwatch = () => {
//   const [time, setTime] = useState(0);
//   const [running, setRunning] = useState(false);

//   useEffect(() => {
//     let intervalId;
//     if (running) {
//       intervalId = setInterval(() => {
//         setTime(time + 1);
//       }, 1000);
//     }
//     return () => clearInterval(intervalId);
//   }, [running, time]);

//   const handleStart = () => {
//     setRunning(true);
//   };

//   const handleStop = () => {
//     setRunning(false);
//   };

//   const handleReset = () => {
//     setRunning(false);
//     setTime(0);
//   };

//   return (
//     <div>
//       <h1>Stopwatch</h1>
//       <p>Time: {formatTime(time)}</p>
//       <button onClick={handleStart}>Start</button>
//       <button onClick={handleStop}>Stop</button>
//       <button onClick={handleReset}>Reset</button>
//     </div>
//   );
// };

// const formatTime = (time) => {
//   const minutes = Math.floor(time / 60);
//   const seconds = time % 60;
//   return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
// };

// export default Stopwatch;